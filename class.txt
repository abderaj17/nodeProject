Backend Systems--

App/Website
Movie Ticket
Metro Booking, IRCTC

Kind, Time, People?

1) We can add the specific data
2) Choose from options

Backend
1) To check,if seats are available
2) Let the theater know
3) Reciept

Communication from the client to the server (Company side).

Client -> Browser -> API -> Server ->
      (React part)

Form                   Req,     Server-r          data is stored
Validation             Res      (Server data)      here


Class1

NodeJs
Important Questions...

Q-> Whats the use of package.json ?
Ans-> It contains the technical specifications like version, authors, custom scripts, listing the packages 
of the  project.

Q-> Difference between package.lock.json and package.json?
Ans-> package.lock contains the stable current versions of the packages that we have  used in our projects.

Q-> How can we write custom scripts for our project?
Ans-> We can write custom scripts in scripts section of package.json
Custom scripts-> helpful in case of production environment.


I) Tech Environment--

1) devlopment env -> API = building and testing -
 monitor the working of api, debug, create tokens, error handeling
2) production env -> Deployed = error free 
    - only functionality and the features are used.


II)  Setup the project
      package - express.js
                 -routing , security, authentication, handeling the data.

    1) npm install express
    2) in index.js -> contains express = require("express") -> imports express
    3) const app = express() -> initialised the express app

    PORT Listeners?

    Network ports


API



There are 2 types of DataBase--

1) Relational - MYSQL
2) Non Relational


MONGODB--
The most perfect DataBase for MERN Stack because it is json object based.

api route
app.post("/signup", (req, res)=>{
    const user = req.body;
})


Collections: these are groups of MONGODB documents or 
groups of data we can use for one or more projects.


Blinkit/ Instamart

Quick Commerce

user data -> name , phone number, address
Store Data -> name, locations, inventory
Delivery Parteners -> name, id, account
Products -> name, decsription, images, prices, expiry date 


MONGODB why?:
- Rich Query Support (Mongoose)
- Efficient
- Automatic Sharding
           -10000 users  (Vertical Scaling)
           -10000 -> 20000 
           - multiple servers
           - horizontal Scaling (Increasing the number of servers)
That is called Sharding.


MONGODB

1. install mongodb community server and mongodb compass.
2. open compass and create a new connection string.
3. open mongodb shell -> terminal for DataBase.

Quering in the mongoShell--

1. show dbs -> this lists all the databases present on your local system.
2. use <db-name> -> this lists all the dbs present in your system
                    on your system or if any db doesnt exist, it will create a new db with that name.
3. 